; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\eflash2sram\objects\mbfuncother.o --asm_dir=.\Eflash2Sram\Listings\ --list_dir=.\Eflash2Sram\Listings\ --depend=.\eflash2sram\objects\mbfuncother.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\Libraries\CMSIS\DSP\Include -I..\..\..\..\Libraries\CMSIS\Core\Include -I..\..\..\..\Libraries\Device\Phoenix\include -I..\..\..\..\Libraries\Protocol\Modbus\include -I..\..\..\..\Libraries\Protocol\Modbus\port -I..\..\..\..\Libraries\Protocol\ -I..\..\..\..\User\LL -I..\..\..\..\Libraries\Driver\include -I..\..\..\..\Libraries\Driver\include\LL -I..\..\..\..\User\Hardware -I..\..\..\..\User\ThirdDrivers -I.\RTE\_Eflash2Sram -ID:\Tools\KIEIL\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Tools\KIEIL\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DARMCM3 -DEFLASH2SRAM --omf_browse=.\eflash2sram\objects\mbfuncother.crf ..\..\..\..\Libraries\Protocol\Modbus\functions\mbfuncother.c]
                          THUMB

                          AREA ||i.eMBFuncReportSlaveID||, CODE, READONLY, ALIGN=2

                  eMBFuncReportSlaveID PROC
;;;80     eMBException
;;;81     eMBFuncReportSlaveID( UCHAR * pucFrame, USHORT * usLen )
000000  b570              PUSH     {r4-r6,lr}
;;;82     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;83         memcpy( &pucFrame[MB_PDU_DATA_OFF], &ucMBSlaveID[0], ( size_t )usMBSlaveIDLen );
000006  4806              LDR      r0,|L1.32|
000008  8802              LDRH     r2,[r0,#0]  ; usMBSlaveIDLen
00000a  4906              LDR      r1,|L1.36|
00000c  1c68              ADDS     r0,r5,#1
00000e  f7fffffe          BL       __aeabi_memcpy
;;;84         *usLen = ( USHORT )( MB_PDU_DATA_OFF + usMBSlaveIDLen );
000012  4803              LDR      r0,|L1.32|
000014  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
000016  1c40              ADDS     r0,r0,#1
000018  8020              STRH     r0,[r4,#0]
;;;85         return MB_EX_NONE;
00001a  2000              MOVS     r0,#0
;;;86     }
00001c  bd70              POP      {r4-r6,pc}
;;;87     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      usMBSlaveIDLen
                  |L1.36|
                          DCD      ucMBSlaveID

                          AREA ||i.eMBSetSlaveID||, CODE, READONLY, ALIGN=2

                  eMBSetSlaveID PROC
;;;52     eMBErrorCode
;;;53     eMBSetSlaveID( UCHAR ucSlaveID, BOOL xIsRunning,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;54                    UCHAR const *pucAdditional, USHORT usAdditionalLen )
;;;55     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  461c              MOV      r4,r3
;;;56         eMBErrorCode    eStatus = MB_ENOERR;
00000c  f04f0800          MOV      r8,#0
;;;57     
;;;58         /* the first byte and second byte in the buffer is reserved for
;;;59          * the parameter ucSlaveID and the running flag. The rest of
;;;60          * the buffer is available for additional data. */
;;;61         if( usAdditionalLen + 2 < MB_FUNC_OTHER_REP_SLAVEID_BUF )
000010  1ca0              ADDS     r0,r4,#2
000012  2820              CMP      r0,#0x20
000014  da26              BGE      |L2.100|
;;;62         {
;;;63             usMBSlaveIDLen = 0;
000016  2000              MOVS     r0,#0
000018  4915              LDR      r1,|L2.112|
00001a  8008              STRH     r0,[r1,#0]
;;;64             ucMBSlaveID[usMBSlaveIDLen++] = ucSlaveID;
00001c  4608              MOV      r0,r1
00001e  8801              LDRH     r1,[r0,#0]  ; usMBSlaveIDLen
000020  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
000022  1c40              ADDS     r0,r0,#1
000024  4a12              LDR      r2,|L2.112|
000026  8010              STRH     r0,[r2,#0]
000028  4812              LDR      r0,|L2.116|
00002a  5445              STRB     r5,[r0,r1]
;;;65             ucMBSlaveID[usMBSlaveIDLen++] = ( UCHAR )( xIsRunning ? 0xFF : 0x00 );
00002c  b10e              CBZ      r6,|L2.50|
00002e  22ff              MOVS     r2,#0xff
000030  e000              B        |L2.52|
                  |L2.50|
000032  2200              MOVS     r2,#0
                  |L2.52|
000034  480e              LDR      r0,|L2.112|
000036  8801              LDRH     r1,[r0,#0]  ; usMBSlaveIDLen
000038  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
00003a  1c40              ADDS     r0,r0,#1
00003c  4b0c              LDR      r3,|L2.112|
00003e  8018              STRH     r0,[r3,#0]
000040  480c              LDR      r0,|L2.116|
000042  5442              STRB     r2,[r0,r1]
;;;66             if( usAdditionalLen > 0 )
000044  2c00              CMP      r4,#0
000046  dd0f              BLE      |L2.104|
;;;67             {
;;;68                 memcpy( &ucMBSlaveID[usMBSlaveIDLen], pucAdditional,
000048  4601              MOV      r1,r0
00004a  461a              MOV      r2,r3
00004c  8812              LDRH     r2,[r2,#0]  ; usMBSlaveIDLen
00004e  1888              ADDS     r0,r1,r2
000050  4622              MOV      r2,r4
000052  4639              MOV      r1,r7
000054  f7fffffe          BL       __aeabi_memcpy
;;;69                         ( size_t )usAdditionalLen );
;;;70                 usMBSlaveIDLen += usAdditionalLen;
000058  4805              LDR      r0,|L2.112|
00005a  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
00005c  4420              ADD      r0,r0,r4
00005e  4904              LDR      r1,|L2.112|
000060  8008              STRH     r0,[r1,#0]
000062  e001              B        |L2.104|
                  |L2.100|
;;;71             }
;;;72         }
;;;73         else
;;;74         {
;;;75             eStatus = MB_ENORES;
000064  f04f0804          MOV      r8,#4
                  |L2.104|
;;;76         }
;;;77         return eStatus;
000068  4640              MOV      r0,r8
;;;78     }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP

00006e  0000              DCW      0x0000
                  |L2.112|
                          DCD      usMBSlaveIDLen
                  |L2.116|
                          DCD      ucMBSlaveID

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ucMBSlaveID
                          %        32

                          AREA ||.data||, DATA, ALIGN=1

                  usMBSlaveIDLen
000000  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Libraries\\Protocol\\Modbus\\functions\\mbfuncother.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_mbfuncother_c_c996ba8d____REV16|
#line 459 "..\\..\\..\\..\\Libraries\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___13_mbfuncother_c_c996ba8d____REV16| PROC
#line 460

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_mbfuncother_c_c996ba8d____REVSH|
#line 474
|__asm___13_mbfuncother_c_c996ba8d____REVSH| PROC
#line 475

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_mbfuncother_c_c996ba8d____RRX|
#line 661
|__asm___13_mbfuncother_c_c996ba8d____RRX| PROC
#line 662

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
